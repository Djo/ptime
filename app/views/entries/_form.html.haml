= semantic_form_for @entry do |f|
  - unless @entry.errors.empty?
    %ul#flash_alert
      - @entry.errors.full_messages.each do |msg|
        %li= msg

  -# Show input field for :day(%input#entry_day_input) as hidden text field.
  -# This field is populated via jQuery and a datepicker.
  #entry-ui-datepicker.center

  -# Prefetch all tasks for projects. Store them in this hidden input field
  -# as JSON. When the user selects a project, the related tasks can be
  -# shown very quickly, then.
  %input#tasks_collection_storage{ :value => get_tasks_by_projects }

  = f.inputs do
    #project

      %input#entry_day_input{ :name => "entry[day]", 
        :value => @entry.day.strftime("%m/%d/%Y") }

      .project_item
        Projects
        = projects_select(f, @active_projects)
      .project_item
        Tasks
        = f.input :task_id, :as => :select, 
          :collection => tasks_collection, :selected => @last_task
      .project_item
        Description
        = f.input :description
      #project_duration.project_item
        Duration (hh:mm)
        = f.input :duration_hours
      #project_start.project_item
        Start
        = f.input :start, :as => :timepicker
      #project_end.project_item
        End
        = f.input :end, :as => :timepicker
      .project_item
        Billable
        = f.check_box :billable
  = f.buttons do
    = f.commit_button :button_html => { :class => 'main_link' }

= render 'entries'
